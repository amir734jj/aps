module TEST[] begin
  type Test := LIST[String];
  
  t : Test := Test$single("hello,") ++ Test$single(" world");

  i : Integer := length("hello");
  
  b : Boolean := t = Test${} and Test${} = t;
end;


module GEN[T :: BASIC[]] extends LIST[T]
begin
  type S := Integer;
end;

module EXT[T :: BASIC[]] extends T
begin
  type S := Integer;
end;

type Gen        := GEN[String];
type Gen_Result := Gen$Result;

type Ext        := EXT[Integer];
type Ext_Result := Ext$Result;